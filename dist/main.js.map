{"version":3,"sources":["webpack://url-screenshot/./src/app/app.module.ts","webpack://url-screenshot/./src/app/controllers/health.controller.ts","webpack://url-screenshot/./src/app/controllers/url-screenshot.controller.ts","webpack://url-screenshot/./src/app/main.ts","webpack://url-screenshot/./src/app/modules/health.module.ts","webpack://url-screenshot/./src/app/modules/url-screenshot.module.ts","webpack://url-screenshot/./src/common/dtos/request/screeshot-create-request.dto.ts","webpack://url-screenshot/./src/common/dtos/response/health.dto.ts","webpack://url-screenshot/./src/common/routes/health.route.ts","webpack://url-screenshot/./src/common/routes/url-screenshot.route.ts","webpack://url-screenshot/./src/config/config.module.ts","webpack://url-screenshot/./src/config/config.service.ts","webpack://url-screenshot/./src/core/provider/s3.provider.ts","webpack://url-screenshot/./src/core/service/health.service.ts","webpack://url-screenshot/./src/core/service/url-screenshot.service.ts","webpack://url-screenshot/./src/domain/exceptions/class-validation.exception.ts","webpack://url-screenshot/./src/domain/exceptions/http-exception.filter.ts","webpack://url-screenshot/./src/domain/exceptions/http.exception.ts","webpack://url-screenshot/./src/domain/logger/logger.module.ts","webpack://url-screenshot/./src/domain/logger/logger.service.ts","webpack://url-screenshot/external \"@hapi/joi\"","webpack://url-screenshot/external \"@nestjs/common\"","webpack://url-screenshot/external \"@nestjs/core\"","webpack://url-screenshot/external \"@nestjs/platform-express\"","webpack://url-screenshot/external \"aws-sdk\"","webpack://url-screenshot/external \"aws-serverless-express\"","webpack://url-screenshot/external \"chalk\"","webpack://url-screenshot/external \"chrome-aws-lambda\"","webpack://url-screenshot/external \"class-validator\"","webpack://url-screenshot/external \"dotenv\"","webpack://url-screenshot/external \"express\"","webpack://url-screenshot/external \"fs\"","webpack://url-screenshot/external \"morgan\"","webpack://url-screenshot/external \"path\"","webpack://url-screenshot/external \"util\"","webpack://url-screenshot/external \"winston\"","webpack://url-screenshot/webpack/bootstrap","webpack://url-screenshot/webpack/startup"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Module, MiddlewareConsumer, RequestMethod, NestModule } from '@nestjs/common';\nimport { LoggerModule } from '../domain/logger/logger.module';\nimport * as morgan from 'morgan';\nimport { Logger } from '../domain/logger/logger.service';\nimport { HealthModule } from './modules/health.module';\nimport { ConfigModule } from 'src/config/config.module';\nimport { UrlScreenshotModule } from './modules/url-screenshot.module';\n\n@Module({\n  imports: [LoggerModule, ConfigModule, HealthModule, UrlScreenshotModule]\n})\nexport class AppModule implements NestModule {\n  constructor(private logger: Logger) {}\n\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(morgan('tiny', { stream: this.logger.stream }))\n      .exclude({ path: 'health', method: RequestMethod.ALL });\n  }\n}\n","import { Controller, Get, Inject } from '@nestjs/common';\nimport { HealthService } from '../../core/service/health.service';\nimport { Logger } from '../../domain/logger/logger.service';\nimport { HealthRoutes } from '../../common/routes/health.route';\nimport { HealthDto } from 'src/common/dtos/response/health.dto';\nimport { IHealthService } from 'src/domain/interfaces/health-service.interface';\nimport { IHealth } from 'src/api/health.interface copy';\n\n@Controller(HealthRoutes.health)\nexport class HealthController implements IHealth {\n  @Inject()\n  private logger: Logger;\n  constructor(@Inject(HealthService) private service: IHealthService) {}\n\n  @Get()\n  get(): HealthDto {\n    return this.service.get();\n  }\n}\n","import { Body, Controller, Get, Inject, Post } from '@nestjs/common';\nimport { Logger } from '../../domain/logger/logger.service';\nimport { IUrlScreenshot } from 'src/api/url-screenshot.interface';\nimport { UrlScreenshotRoutes } from 'src/common/routes/url-screenshot.route';\nimport { UrlScreenshotService } from 'src/core/service/url-screenshot.service';\nimport { IUrlScreenshotService } from 'src/domain/interfaces/url-screenshot-service.interface';\nimport { ScreenshotCreateResponseDto } from 'src/common/dtos/response/screenshot-response-create.dto';\nimport { ScreenshotCreateRequestDto } from 'src/common/dtos/request/screeshot-create-request.dto';\n\n@Controller(UrlScreenshotRoutes.base)\nexport class UrlScreenshotController implements IUrlScreenshot {\n  @Inject()\n  private logger: Logger;\n  constructor(@Inject(UrlScreenshotService) private service: IUrlScreenshotService) {}\n\n  @Post()\n  create(@Body() body: ScreenshotCreateRequestDto): Promise<ScreenshotCreateResponseDto> {\n    return this.service.create(body.url);\n  }\n}\n","import { NestFactory } from '@nestjs/core';\nimport * as express from 'express';\nimport { AppModule } from './app.module';\nimport { ConfigService } from '../config/config.service';\nimport { ValidationPipe } from '@nestjs/common';\nimport { Logger } from '../domain/logger/logger.service';\nimport { ClassValidationException } from '../domain/exceptions/class-validation.exception';\nimport { HttpExceptionFilter } from '../domain/exceptions/http-exception.filter';\nimport { ExpressAdapter } from '@nestjs/platform-express';\nimport { Context } from 'aws-lambda';\nimport { Server } from 'http';\nimport { createServer, proxy, Response } from 'aws-serverless-express';\n\nlet cachedServer: Server;\nlet bootstrap;\n\nconsole.log(process.env.NODE_ENV);\n\nif (process.env.NODE_ENV === 'local') {\n  bootstrap = async () => {\n    const logger: Logger = new Logger();\n\n    const app = await NestFactory.create(AppModule, {\n      logger\n    });\n    const configService = app.get(ConfigService);\n    app.useLogger(logger);\n    app.useGlobalFilters(new HttpExceptionFilter());\n\n    app.useGlobalPipes(\n      new ValidationPipe({\n        exceptionFactory: (errors) => {\n          const exception = new ClassValidationException(errors);\n          logger.error(exception.toString());\n\n          return exception;\n        }\n      })\n    );\n\n    await app.listen(configService.port);\n  };\n  bootstrap();\n} else {\n  bootstrap = async () => {\n    const expressApp = express();\n    const logger: Logger = new Logger();\n\n    const app = await NestFactory.create(AppModule, new ExpressAdapter(expressApp), {\n      logger\n    });\n    app.useLogger(logger);\n    app.useGlobalFilters(new HttpExceptionFilter());\n\n    app.useGlobalPipes(\n      new ValidationPipe({\n        exceptionFactory: (errors) => {\n          const exception = new ClassValidationException(errors);\n          logger.error(exception.toString());\n\n          return exception;\n        }\n      })\n    );\n    await app.init();\n\n    return createServer(expressApp);\n  };\n}\n\nexport async function handler(event: any, context: Context): Promise<Response> {\n  if (!cachedServer) {\n    const server = await bootstrap();\n    cachedServer = server;\n  }\n\n  return proxy(cachedServer, event, context, 'PROMISE').promise;\n}\n","import { Module } from '@nestjs/common';\nimport { HealthController } from '../controllers/health.controller';\nimport { HealthService } from 'src/core/service/health.service';\n\n@Module({\n  imports: [],\n  controllers: [HealthController],\n  providers: [HealthService]\n})\nexport class HealthModule {}\n","import { HttpModule, Module } from '@nestjs/common';\nimport { UrlScreenshotService } from 'src/core/service/url-screenshot.service';\nimport { S3Provider } from 'src/core/provider/s3.provider';\nimport { UrlScreenshotController } from '../controllers/url-screenshot.controller';\n\n@Module({\n  imports: [HttpModule],\n  controllers: [UrlScreenshotController],\n  providers: [UrlScreenshotService, S3Provider]\n})\nexport class UrlScreenshotModule {}\n","import { IsNotEmpty } from 'class-validator';\n\nexport class ScreenshotCreateRequestDto {\n  @IsNotEmpty()\n  url: string;\n}\n","export class HealthDto {\n  status: string;\n}\n","export enum HealthRoutes {\n  health = 'health'\n}\n","export enum UrlScreenshotRoutes {\n  base = 'url-screenshot'\n}\n","import { Module, Global } from '@nestjs/common';\nimport { ConfigService } from './config.service';\n\n@Global()\n@Module({\n  providers: [ConfigService],\n  exports: [ConfigService]\n})\nexport class ConfigModule {}\n","import * as dotenv from 'dotenv';\nimport * as Joi from '@hapi/joi';\nimport { Injectable } from '@nestjs/common';\ndotenv.config();\n\nconst ENV_VARIABLES = {\n  NODE_ENV: '',\n  PORT: '',\n  S3_SECRET_KEY: '',\n  S3_ACCESS_KEY: '',\n  S3_BUCKET: '',\n  S3_REGION: ''\n};\ntype EnvVariablesType = typeof ENV_VARIABLES;\n\n@Injectable()\nexport class ConfigService {\n  private readonly envConfig: EnvVariablesType;\n\n  constructor() {\n    const envVars = ENV_VARIABLES;\n    Object.keys(ENV_VARIABLES).forEach((name) => (envVars[name] = this.getEnvVar(name)));\n    this.envConfig = this.validateInput(envVars);\n  }\n\n  private getEnvVar(name: string): string {\n    return process.env[name];\n  }\n\n  private validateInput(envConfig: EnvVariablesType): EnvVariablesType {\n    const envVarsSchema: Joi.ObjectSchema = Joi.object({\n      NODE_ENV: Joi.string().default('local').valid('local', 'development', 'production', 'test'),\n      PORT: Joi.number().default(3000),\n      S3_SECRET_KEY: Joi.string().required(),\n      S3_ACCESS_KEY: Joi.string().required(3000),\n      S3_BUCKET: Joi.string().required(3000),\n      S3_REGION: Joi.string().required(3000)\n    });\n\n    const { error, value: validatedEnvConfig } = envVarsSchema.validate(envConfig);\n    if (error) {\n      throw new Error(error);\n    }\n\n    return validatedEnvConfig;\n  }\n\n  get s3SecretAccessKey(): string {\n    return String(this.envConfig.S3_SECRET_KEY);\n  }\n\n  get s3AccessKey(): string {\n    return String(this.envConfig.S3_ACCESS_KEY);\n  }\n\n  get s3Bucket(): string {\n    return String(this.envConfig.S3_BUCKET);\n  }\n\n  get s3Region(): string {\n    return String(this.envConfig.S3_REGION);\n  }\n\n  get env(): string {\n    return String(this.envConfig.NODE_ENV);\n  }\n\n  get port(): number {\n    return Number(this.envConfig.PORT);\n  }\n\n  get(key: string): string {\n    const variable = this.getEnvVar(key);\n    if (!variable) {\n      throw new Error('Config variable does not exist: ' + key);\n    }\n\n    return variable;\n  }\n}\n","import * as aws from 'aws-sdk';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { Injectable } from '@nestjs/common';\nimport { PutObjectRequest } from 'aws-sdk/clients/s3';\nimport { ConfigService } from 'src/config/config.service';\n\n@Injectable()\nexport class S3Provider {\n  private s3: aws.S3;\n\n  constructor(private configService: ConfigService) {\n    aws.config.update({\n      secretAccessKey: configService.s3SecretAccessKey,\n      accessKeyId: configService.s3AccessKey,\n      region: configService.s3Region\n    });\n\n    this.s3 = new aws.S3();\n  }\n\n  get S3(): aws.S3 {\n    return this.s3;\n  }\n\n  uploadFile(pathInput: string, pathOutput: string, fileName: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const fileContent = fs.readFileSync(path.join(pathInput, fileName));\n      const params: PutObjectRequest = {\n        Bucket: this.configService.s3Bucket,\n        Key: `${pathOutput}/${fileName}`,\n        Body: fileContent,\n        ContentType: 'image/png',\n        ACL: 'public-read'\n      };\n      this.s3.upload(params, (s3Err, dataS3) => {\n        if (s3Err) {\n          return reject(s3Err);\n        }\n\n        return resolve(dataS3.Location);\n      });\n    });\n  }\n}\n","import { Injectable, Inject, OnModuleInit } from '@nestjs/common';\nimport { Logger } from '../../domain/logger/logger.service';\nimport { HealthDto } from 'src/common/dtos/response/health.dto';\nimport { IHealthService } from 'src/domain/interfaces/health-service.interface';\n\n@Injectable()\nexport class HealthService implements IHealthService, OnModuleInit {\n  @Inject()\n  private readonly logger: Logger;\n\n  onModuleInit() {\n    this.logger.setContext(HealthService.name);\n  }\n\n  get(): HealthDto {\n    return { status: 'UP' };\n  }\n}\n","import { HttpService, Injectable } from '@nestjs/common';\nimport * as chromium from 'chrome-aws-lambda';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { S3Provider } from '../provider/s3.provider';\nimport { IUrlScreenshotService } from 'src/domain/interfaces/url-screenshot-service.interface';\nimport { ScreenshotCreateResponseDto } from 'src/common/dtos/response/screenshot-response-create.dto';\n\n@Injectable()\nexport class UrlScreenshotService implements IUrlScreenshotService {\n  constructor(private s3Provider: S3Provider, private httpService: HttpService) {}\n\n  async create(url: string): Promise<ScreenshotCreateResponseDto> {\n    const pathTmp = '/tmp';\n    const fileName = Date.now().toString() + '.png';\n    const pathS3 = 'url-screenshot';\n\n    if (!fs.existsSync(pathTmp)) {\n      fs.mkdirSync(pathTmp);\n    }\n\n    const browser = await chromium.puppeteer.launch({\n      args: chromium.args,\n      defaultViewport: chromium.defaultViewport,\n      executablePath: await chromium.executablePath,\n      headless: chromium.headless,\n      ignoreHTTPSErrors: true\n    });\n    const page = await browser.newPage();\n    await page.goto(url);\n    await page.screenshot({ path: path.join(pathTmp, fileName) });\n    const urlImage = await this.s3Provider.uploadFile(pathTmp, pathS3, fileName);\n    fs.unlinkSync(path.join(pathTmp, fileName));\n\n    await browser.close();\n\n    return {\n      urlImage\n    };\n  }\n}\n","import { ValidationError } from 'class-validator';\nimport { HttpDomainException } from './http.exception';\n\nexport class ClassValidationException extends HttpDomainException {\n  constructor(errors: ValidationError[]) {\n    const message = 'invalid params';\n    const error = {\n      validators: errors.map((e) => e.constraints)\n    };\n    super({ message, error });\n  }\n}\n","import { Catch, ArgumentsHost, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\nimport { HttpDomainException } from './http.exception';\n\n@Catch(HttpDomainException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpDomainException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse<Response>();\n    const status = exception.getStatus();\n    const body = exception.getBody();\n\n    response.status(status).json({\n      ...body\n    });\n  }\n}\n","import { HttpException, HttpStatus } from '@nestjs/common';\n\ninterface HttpDomainExceptionOptions {\n  message: string;\n  status?: number;\n  code?: number;\n  error?: any;\n}\n\nexport class HttpDomainException extends HttpException {\n  code: number;\n  error: any;\n\n  constructor({ status = HttpStatus.BAD_REQUEST, ...options }: HttpDomainExceptionOptions) {\n    super(options.message, status);\n    this.code = options.code;\n    this.error = options.error;\n  }\n\n  getCode(): number {\n    return this.code;\n  }\n\n  getError(): any {\n    return this.error;\n  }\n\n  getBody(): Record<string, any> {\n    return { message: this.message, code: this.code, error: this.error };\n  }\n\n  toString(): string {\n    return this.message;\n  }\n}\n","import { Module, Global } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Global()\n@Module({\n  imports: [],\n  providers: [Logger],\n  exports: [Logger]\n})\nexport class LoggerModule {}\n","import { LoggerService, Injectable, Logger as NestLogger } from '@nestjs/common';\nimport { createLogger, Logger as winstonLogger, format, transports } from 'winston';\nimport * as chalk from 'chalk';\nimport * as util from 'util';\n\n@Injectable()\nexport class Logger extends NestLogger implements LoggerService {\n  private readonly logger: winstonLogger;\n\n  constructor(context = 'Main') {\n    super(context, true);\n    this.logger = createLogger({\n      format: format.combine(format.timestamp(), format.prettyPrint(), format.json(), this.printFormat()),\n      transports: [new transports.Console()]\n    });\n  }\n\n  log(message: string) {\n    this.logger.info(util.format(message));\n  }\n  error(message: any, meta?: any) {\n    this.logger.error(util.format(message, meta ?? ''));\n  }\n  warn(message: string) {\n    this.logger.warning(util.format(message));\n  }\n  debug(message: string) {\n    this.logger.debug(util.format(message));\n  }\n\n  verbose(message: string) {\n    this.logger.info(util.format(message));\n  }\n\n  private printFormat() {\n    return format.printf((info) => {\n      const color = chalk;\n      switch (info.level) {\n        case 'info':\n          return this.logs(info, { colorLevel: color.blue, colorContext: color.green });\n        case 'debug':\n          return this.logs(info, { colorLevel: color.white, colorContext: color.green });\n        case 'error':\n          return this.logs(info, {\n            colorLevel: color.red,\n            colorContext: color.green,\n            colorMessage: color.red\n          });\n      }\n    });\n  }\n\n  private logs(\n    info: any,\n    {\n      colorLevel = (s: string) => s,\n      colorTimestamp = (s: string) => s,\n      colorContext = (s: string) => s,\n      colorMessage = (s: string) => s\n    }\n  ) {\n    return !process.env.NODE_ENV || process.env.NODE_ENV === 'local'\n      ? `[${colorLevel(info.level)}] ${colorTimestamp(info.timestamp)} [${colorContext(this.context)}] ${colorMessage(\n          info.message\n        )}`\n      : `[${this.context}] ${info.message}`;\n  }\n\n  get stream() {\n    return {\n      write: (message) => {\n        this.logger.info(message.substring(0, message.lastIndexOf('\\n')));\n      }\n    };\n  }\n}\n","module.exports = require(\"@hapi/joi\");;","module.exports = require(\"@nestjs/common\");;","module.exports = require(\"@nestjs/core\");;","module.exports = require(\"@nestjs/platform-express\");;","module.exports = require(\"aws-sdk\");;","module.exports = require(\"aws-serverless-express\");;","module.exports = require(\"chalk\");;","module.exports = require(\"chrome-aws-lambda\");;","module.exports = require(\"class-validator\");;","module.exports = require(\"dotenv\");;","module.exports = require(\"express\");;","module.exports = require(\"fs\");;","module.exports = require(\"morgan\");;","module.exports = require(\"path\");;","module.exports = require(\"util\");;","module.exports = require(\"winston\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(812);\n"],"sourceRoot":""}